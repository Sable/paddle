/* Soot - a J*va Optimization Framework
 * Copyright (C) 2004 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.paddle;
import soot.*;
import soot.jimple.paddle.queue.*;
import java.util.*;
import soot.jimple.paddle.bdddomains.*;

/** Manages the points-to sets for nodes.
 * @author Ondrej Lhotak
 */
public class BDDP2Sets extends AbsP2Sets
{ 
    PropBDD prop;


    public BDDP2Sets( PropBDD prop ) {
        this.prop = prop;
    }

    public PointsToSetReadOnly get( Context ctxt, VarNode v ) {
        return new BDDPointsToSet( prop.pt{A_varc, A_var} 
                     <> new{ctxt=>A_varc, v=>A_var}{A_varc, A_var} );
    }
    public PointsToSetReadOnly get( Context ctxt, AllocDotField adf ) {
        return new BDDPointsToSet( (A_obj=>H1) ( (A_obj=>H2) (
                prop.fieldPt{A_basec, A_base,A_fld} <>
                new{ctxt=>A_basec, adf.base()=>A_base, adf.field()=>A_fld }
                            {A_basec, A_base,A_fld} ) ) );
    }
    public PointsToSetInternal make( Context c, VarNode v ) {
        throw new RuntimeException( "Not implemented" );
    }
    public PointsToSetInternal make( Context c, AllocDotField adf ) {
        throw new RuntimeException( "Not implemented" );
    }
    public Rvarc_var_objc_obj getReader( VarNode vn ) {
        Rvarc_var_objc_objBDD ret = new Rvarc_var_objc_objBDD(
            prop.pt{A_var} >< new{vn=>A_var}{A_var},
            "getReader", null);
        return ret;
    }
    public Rvarc_var_objc_obj getReader() {
        return new Rvarc_var_objc_objBDD(prop.pt);
    }
    public Rbasec_base_fld_objc_obj fieldPt() {
        return new Rbasec_base_fld_objc_objBDD(prop.fieldPt);
    }
}

