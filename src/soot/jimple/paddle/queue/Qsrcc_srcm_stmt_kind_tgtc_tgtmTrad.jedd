/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003, 2004, 2005 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.paddle.queue;
import soot.util.*;
import soot.jimple.paddle.bdddomains.*;
import soot.jimple.paddle.*;
import soot.jimple.toolkits.callgraph.*;
import soot.*;
import soot.util.queue.*;
import jedd.*;
import java.util.*;

public class Qsrcc_srcm_stmt_kind_tgtc_tgtmTrad extends Qsrcc_srcm_stmt_kind_tgtc_tgtm {
    public Qsrcc_srcm_stmt_kind_tgtc_tgtmTrad( String name ) { super(name); }
    private ChunkedQueue q = new ChunkedQueue();
    public void add( Context _srcc, SootMethod _srcm, Unit _stmt, Kind _kind, Context _tgtc, SootMethod _tgtm ) {
        q.add( _srcc );
        q.add( _srcm );
        q.add( _stmt );
        q.add( _kind );
        q.add( _tgtc );
        q.add( _tgtm );
        invalidate();
    }
    public void add( <A_srcc:C1, A_srcm:MS, A_stmt:ST, A_kind:KD, A_tgtc:C2, A_tgtm:MT> in ) {
        Iterator it = in.iterator( new Attribute[] { A_srcc.v(), A_srcm.v(), A_stmt.v(), A_kind.v(), A_tgtc.v(), A_tgtm.v() } );
        while( it.hasNext() ) {
            Object[] tuple = (Object[]) it.next();
            for( int i = 0; i < 6; i++ ) {
                add( (Context) tuple[0], (SootMethod) tuple[1], (Unit) tuple[2], (Kind) tuple[3], (Context) tuple[4], (SootMethod) tuple[5] );
            }
        }
    }
    public Rsrcc_srcm_stmt_kind_tgtc_tgtm reader( String rname ) {
        return new Rsrcc_srcm_stmt_kind_tgtc_tgtmTrad( q.reader(), name+":"+rname, this );
    }
}
