/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003, 2004, 2005 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.paddle.queue;
import soot.util.*;
import soot.jimple.paddle.bdddomains.*;
import soot.jimple.paddle.*;
import soot.jimple.toolkits.callgraph.*;
import soot.*;
import soot.util.queue.*;
import jedd.*;
import java.util.*;

public class Robj_varDebug extends Robj_var{
    protected Robj_varBDD bdd;
    protected Robj_varSet trad;
    public Robj_varDebug( Robj_varBDD bdd, Robj_varSet trad, String name, PaddleQueue q ) { super(name, q); this.bdd = bdd; this.trad = trad;}
    public Iterator iterator() {
        return new Iterator() {
            Iterator tradIt = trad.iterator();
            Iterator bddIt = bdd.iterator();
            Set tradSet = new HashSet();
            Set bddSet = new HashSet();
            public boolean hasNext() {
                if( tradIt.hasNext() != bddIt.hasNext() ) throw new RuntimeException( "they don't match: tradIt="+tradIt.hasNext()+" bddIt="+bddIt.hasNext() );
                if(!tradIt.hasNext() && !tradSet.equals(bddSet)) throw new RuntimeException( name+"\ntradSet="+tradSet+"\nbddSet="+bddSet );
                return tradIt.hasNext();
            }
            public Object next() {
                Robj_var.Tuple bddt = (Robj_var.Tuple) bddIt.next();
                Robj_var.Tuple tradt = (Robj_var.Tuple) tradIt.next();
                tradSet.add(tradt);
                bddSet.add(bddt);
                return tradt;
            }
            public void remove() { throw new UnsupportedOperationException(); }
        };
    }
    public <obj:H1, var:V1> get() {
        throw new RuntimeException( "NYI" );
    }
    public boolean hasNext() { return trad.hasNext(); }
}
