/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003, 2004, 2005 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.paddle.queue;
import soot.util.*;
import soot.jimple.paddle.bdddomains.*;
import soot.jimple.paddle.*;
import soot.jimple.toolkits.callgraph.*;
import soot.*;
import soot.util.queue.*;
import jedd.*;
import java.util.*;

public class Qvar_srcm_stmt_dtp_signature_kindDebug extends Qvar_srcm_stmt_dtp_signature_kind {
    public Qvar_srcm_stmt_dtp_signature_kindDebug( String name ) { super(name); }
    private Qvar_srcm_stmt_dtp_signature_kindBDD bdd = new Qvar_srcm_stmt_dtp_signature_kindBDD(name+"bdd");
    private Qvar_srcm_stmt_dtp_signature_kindSet trad = new Qvar_srcm_stmt_dtp_signature_kindSet(name+"set");
    public void add( VarNode _var, SootMethod _srcm, Unit _stmt, Type _dtp, NumberedString _signature, Kind _kind ) {
        invalidate();
        bdd.add( _var, _srcm, _stmt, _dtp, _signature, _kind );
        trad.add( _var, _srcm, _stmt, _dtp, _signature, _kind );
    }
    public void add( <var:V1, srcm:MS, stmt:ST, dtp:T1, signature:SG, kind:KD> in ) {
        Iterator it = in.iterator( new Attribute[] { var.v(), srcm.v(), stmt.v(), dtp.v(), signature.v(), kind.v() } );
        while( it.hasNext() ) {
            Object[] tuple = (Object[]) it.next();
            for( int i = 0; i < 6; i++ ) {
                add( (VarNode) tuple[0], (SootMethod) tuple[1], (Unit) tuple[2], (Type) tuple[3], (NumberedString) tuple[4], (Kind) tuple[5] );
            }
        }
    }
    public Rvar_srcm_stmt_dtp_signature_kind reader( String rname ) {
        return new Rvar_srcm_stmt_dtp_signature_kindDebug( (Rvar_srcm_stmt_dtp_signature_kindBDD) bdd.reader(rname), (Rvar_srcm_stmt_dtp_signature_kindSet) trad.reader(rname), name+":"+rname, this );
    }
}
